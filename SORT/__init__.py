#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @Time    : 2020/2/20 11:33
# @Author  : sakura
# @Site    : 
# @File    : __init__.py.py
# @Software: PyCharm


""" 这里我们讲讲排序算法"""

"""如何分析一个  ‘排序算法’？

    一、 排序算法的执行效率
        1. 最好情况、最坏情况、平均情况时间复杂度  —— 要知道排序算法在不同数据下的表现性能
        2. 时间复杂度的系数、常数、低阶 —— 考虑性能的话，还是要把这些数据考量进来
        3. 比较次数和交换（或移动）次数
        
    二、排序算法的内存消耗
        原地排序：原地排序算法，就是特指空间复杂度为O(1)的排序算法
        
    三、排序算法的稳定性
            稳定性——如果待排序的序列中存在值相等的元素，经过排序之后，相等的元素之间原有的顺序不变
            真正软件开发，我们要排序的往往不是单纯的整数，而是一组对象，我们需要按照对象的某个Key来排序"""


"""
有序度：数组中具有有序关系的元素对的个数： 2 4 3 1 5 6的有序度为11
                                            因为有序对数组为：(2,4) (2,3),(2,5),(2,6)
                                                              (4,5) (4,6) (3,5) (3,6)4
                                                              (1,5) (1,6)  (5,6)
                                                              
        同理，对于一个倒序的6 5 4 3 2 1，有序度是0
              对于一个完全有序的数组1 2 3 4 5 6...n  有序度是： n*(n-1)/2   这个叫满有序度
逆序度： 和有序度刚好相反

——————————》》》》》  逆序度=满有序度 - 有序度

我们排序的过程就是一种增加有序度，减少逆序度的过程，最后达到满有序度，就说明排序完成了
"""